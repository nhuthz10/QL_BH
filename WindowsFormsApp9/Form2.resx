<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKen
        nh2srJJ1qKmUpKSllrakpZa2qKmUpKysknWtrZscAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAr5+PEKao
        laGTmJvuho6k/3+Iof9/iKH/f4ih/3+Iof+RmK7/h4+n/4GJoP+Sl5rupqiVoa+fjxAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqv+qA6Om
        oqyJkJ78f4ih/3+Iof+EjaX/h4+n/5GYrv9/iKH/f4ih/4iQp/+GjqX/ho6m/3+Iof+Di6P/jpSk/amp
        k6Gq/6oDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKqq
        lRiYnaHrj5et/3+Iof+Kkaj/f4ih/3+Iof+Di6P/iJCn/3+Iof9/iKH/f4ih/3+Iof9/iKH/f4ih/3+I
        of9/iKH/kZiu/5yiqPKxsZMaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACntZ9anKSy/pqhtf+aobX/mqG1/5qhtf+aobX/mqG1/5qhtf+aobX/mqG1/5qhtf+aobX/mqG1/5qh
        tf+aobX/mqG1/5qhtf+aobX/mqG1/52jsv2bqpVjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAApc6EH37h3v194eP/i+Tj/4vk4/89fff/RYL4/0WC+P9Fgvj/RYL4/1ul7/+L5OP/i+Tj/4vk
        4/+R0N//xnzb/8GL4P/Bh93/hdjV/4jBrv+Dz8n/rYvU/7mF2v7xPNOV+h3ZNQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//gAKcy4DndvH//3bx//928f//dvH//4qiv//u5Zr/7uSW/+regf/Awp//SZ7//3bx
        //928f//dvH//7WN6f945fj/duXp/6av8f+WvOf/p5xD/6KWBv+mjyz/ja5X/4+yZOz9Pt6EAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAq86Al4THgf928f//dvH//3bx//928f//iaG+//Dopv/u5Zr/7uSW/8DC
        oP9Jnv//dvH//3bx//928f//rZrw/4TJ6v96zbT/qpLW/5C/wv9+vI3/jb+D/7SOmP+DvYb/eaFm/96E
        w9cAAAAAAAAAAAAAAAAAAAAAAAAAAL/VgAyOyoH7hMeB/1S5//9TgOX/Yorf/zdx9/+Bm7r/6t+G/+7l
        nf/s4pD/zs2f/zB0//9fh97/apDh/26T4v9wkeL/sV/f/7Zlwv+gdoX/cIWI/2eHwf9qiK//hHWu/7WJ
        6/+7gKT/kqqE/aTIgA4AAAAAAAAAAAAAAAAAAAAArtCCnYTHgf+Ex4H/U7j//6uypf/q3oD/Yorf/059
        7P9si9//a4rf/2uK3/+WrOz/N3r//8zJk//r34T/7+eh//Dopv/Nv7T/roTJ/7GalP/MwF3/6t6A/+yz
        lf/DTbT/V6nk/3OhY/91qG7/n754pAAAAAAAAAAAAAAAAAAAAACXy4LuhMeB/4THgf9TuP//sLer/+3i
        kP9iit//h6C9/+7klf/q3oH/6t6A/8DCn/80eP//z82Z/+3ikf/r34T/7+eh/+fapv/Kw6X/ysiZ/+S/
        jv/m04L/6t6A/5Wmv/9TuP//dalv/3Wpb/+HtHLwAAAAAAAAAAAAAAAAudGAFobHgf+Ex4H/hMeB/1O4
        //+1vLD/7uSW/2qQ4f+Kor//8ein//LqsP/v5qH/wMKf/zR4///U0qT/7uSW/+3ikf/r34T/7+eh//Do
        pv/u5qP/5tSe/+zgjP/q3oD/laa//1O4//91qW//dalv/3eqb/+xuoAaAAAAAAAAAAC10IBohMeA/4rI
        gf+Ex4H/U7j//7S7r//w6Kb/a5Hh/4mhvv/w8cH/3fW3/+T2wf/AwqD/NHj//9LPn//w6Kb/7uSW/+3i
        kf/r34T/7+eh//Dopv/w6Kb/8Oil/+zhi/+Vpr//U7j//3Wpb/91qW//ibNy/8XRfVgAAAAAAAAAAOvd
        gFrm3YD/4tyA/5nLgf9TuP//rbSc/+zikP91ltn/gZu6/+rfhv/u5Z3/7OKQ/87Nn/80eP//zceB/+zi
        kP/u5Z3/6+CL/+rfhv/o23j/7eSX/+7lnf/u5Z3/7uWc/6Wxt/9TuP//d6pv/4aycv/Y1n3/6d+AaAAA
        AAAAAAAA696Bc+regP/q3oD/6t6A/1Wx4v89gfX/O3ni/zV25/82e/P/Onjg/z1+7v89fu7/Onjg/zeA
        9P88e+f/O3ni/z2B9f87eeL/PHvn/z6B8/86eOD/PX7u/z1+7v86eOD/PoH0/1e15//p3oD/6t6A/+re
        gP/q3YF5AAAAAAAAAADp3oB06t6A/+bdfP92zR7/VcgY/3jOu//f6uv/zuXo/2LJi/9UyAz/W8hd/7Pd
        4v/l7Oz/kdTV/1fIMf9VyBj/dc21/9/q6//O5ej/YsmL/1TIDP9byF3/s93i/+Xs7P+R1NX/V8gx/2XK
        D//S2mz/6t6A/+rdgXkAAAAAAAAAAOvdgFrq3oD/x9li/1PIAP9TyAD/o9qr/+7u7v/u7u7/Ycs7/1PI
        AP9TyAX/6+3t/+7u7v+t3bL/U8gA/1PIAP9/0nX/7u7u/+7u7v9hyzv/U8gA/1PIBf/r7e3/7u7u/63d
        sv9TyAD/U8gA/6LUQ//q3oD/6d+AaAAAAAAAAAAA69+AQOregP/V3G//md44/4bgPf+o5Xn/4+7k/+Tu
        5f+k4nj/huA9/4bgPf/e7dz/5O7l/8rquv+G4D3/huA9/7DljP/k7uX/5O7l/5bhW/+G4D3/j+BQ/+Tu
        5f/k7uX/veih/4bgPf+W4DP/wtte/+regP/p3YBEAAAAAAAAAADu3YgP6d6A+eregP/m3nv/sOJA/3nm
        BP+s6Ff/8/Pp/+/05P+N5R7/duYA/9Psm//19fX/4fDB/3bmAP925gD/wOp3//X19f/r8ND/duYA/33l
        CP/c77f/9fXz/9Psm/945gP/meMm/9vfb//q3oD/6t6A+O3bgA4AAAAAAAAAAAAAAADq3oC46t6A/+re
        gP/q3oD/2t9u/5njJv+Q5yf/7PDU/+ry2f+H5hb/hOYW//T07f/u9OL/duYA/3bmAP/N65P/9fX1/6vo
        Vf955gT/1O2l//Tz6/+u6Fr/h+UT/8ngW//q3oD/6t6A/+regP/q3YC2AAAAAAAAAAAAAAAAAAAAAOve
        gGTq3oD/6t6A/+regP/q3oD/6t6A/1Xdvv9V3b7/Vd2+/1Xdvv9V3b7/Vd2+/1Xdvv9V3b7/Vd2+/1Xd
        vv9V3b7/Vd2+/1Xdvv9V3b7/Vd2+/1Xdvv+z4KH/6t6A/+regP/q3oD/6t6A/+regWMAAAAAAAAAAAAA
        AAAAAAAA/9WABuregN3q3oD/6t6A/+regP/q3oD/fPL//3zy//988v//fPL//3zy//988v//fPL//3zy
        //988v//fPL//3zy//988v//fPL//3zy//988v//fPL//8njpv/q3oD/6t6A/+regP/q3oDf29uSBwAA
        AAAAAAAAAAAAAAAAAAAAAAAA6d6AXOregP/q3oD/6t6A/+regP/T46D/0+Og/8Llsv9lqvP/Zarz/2Wq
        8/9lqvP/Zarz/2Wq8/9lqvP/Zarz/2Wq8/9lqvP/hsnf/9PjoP/T46D/5N+I/+regP/q3oD/6t6A/+vd
        gVkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//4AC6t6AsuregP/q3oD/6t6A/+regP/q3oD/zeKg/0Bu
        //9IdP//ZIj//1V+//9Vff//XoX//2SJ//9Zgf//PGv//0Bu//9pre//6t6A/+regP/q3oD/6t6A/+re
        gP/r3oCw//8AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADq1YAM6t6A0uregP/q3oD/6t6A/+re
        gP/U4Zj/Q3f//1F7//+CoP//fp3//4Ce//9zlf//epv//3ub//92l///QG7//3O26P/q3oD/6t6A/+re
        gP/q3oD/6d2A1e3bgA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADu3YAe6t6A0+re
        gP/q3oD/6t6A/+regP+azcv/bbHt/22x7f9tse3/bbHt/22x7f9tse3/bbHt/22x7f90tuj/0t2X/+re
        gP/q3oD/6t6A/+regNLu3YAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADq1YAM692Ar+regP/q3oD/6t6A/+regP/q3oD/6t6A/+regP/q3oD/6t6A/+regP/q3oD/6t6A/+re
        gP/q3oD/6t6A/+regP/q34C17t2IDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD//wAB6t6BVerfgNzq3oD/6t6A/+regP/q3oD/6t6A/+regP/q3oD/6t6A/+re
        gP/q3oD/6t6A/+regP/q3oDi69+AZv//qgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA29uSB+vegGTq3oC46d6A+eregP/q3oD/6t6A/+re
        gP/q3oD/6t6A/+negPnq3oC3696AZP/VgAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADt24AO69+CP+vd
        gVvr3YFx692BcevdgVvr34I/7duADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////wD///gAH//gAAf/wAAD/4AAAf8AAAB+AAAAfgAAAHwAAAA8AA
        AAPAAAADgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAHAAAADwAAAA8AAAAPgAAAH4AAAB/AA
        AA/4AAAf/AAAP/4AAH//gAH///AP//////8=
</value>
  </data>
</root>